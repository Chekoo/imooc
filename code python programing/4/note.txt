int 整型
boolean 布尔型
float 浮点型
long int 长整型
complex 复数型
复数 与数学中的复数概念完全相同。Python中的复数有以下几个特性：

复数由实数部分和虚数部分构成，表示为：real+imagj 或 real+imagJ
复数的实部real和虚部imag都是浮点型
string 字符串
list 列表
truple 元组
dictionary 字典

如果参与运算的两个操作数的类型不同，则Python会按照以下规则进行自动类型转换：

如果有一个操作数是复数，另一个操作数被转换为复数
否则，如果有一个操作数是浮点型，另一个操作数被转换为浮点型
否则，如果有一个操作数是长整型，另一个操作数被转换为长整型
否则，两者必然都是整型，无须类型转换
上述转换规则总结起来就是：非复数转复数，非浮点型转浮点型，非长整型转长整型，整型不变。

coerce(x, y)是一个内建函数，它按照上述转换规则对x和y进行类型转换，并返回由转换后的x和y构成的一个元组。使用示例如下：

>>> coerce(1.0, 5+2j) # 非复数转复数
((1+0j), (5+2j))
>>> coerce(4L, 6.0) # 非浮点型转浮点型
(4.0, 6.0)
>>> coerce(4, 6L) # 非长整型转长整型
(4L, 6L)
>>> coerce(4, 6) # 整型不变
(4, 6)


所有的Python对象都拥有三个特性：身份，类型和值。
身份：每一个对象都有一个唯一的身份标识自己，任何对象的身份可以使用内建函数id()来得到。这个值可以被认为是该对象的内存地址。
你极少会用到这个值，也不用太关心它究竟是什么。
类型：对象的类型决定了该对象可以保存什么类型的值，可以进行什么样的操作，以及遵循什么样的规则。
你可以用内建函数type()查看Python对象的类型。因为在Python中类型也是对象（还记得我们提到Python是面向对象的这句话吗?），所以type()返回的是对象而不是简单的字符串。
值：对象表示的数据项。

Pythori2.2统一了类型和类，所有的内建类型现在也都是类，在这基础之上，原来的所谓内建转换函数像int()、type()、 list()等，
现在都成了工厂函数。也就是说虽然他们看上去有点像函数，实质上他们是类。当你调用它们时，实际上是生成了该类型的一个实例，
就像工厂生产货物一样。+


