Python支持多种数字类型：整型、长整型、布尔型、双精度浮点型、十进制浮点型和复数。

数字提供了标量贮存和直接访问。它是不可更改类型，也就是说变更数字的值会生成新的对象。

在学习编程的过程中，我们一直接受这样的教育：变量就像一个盒子，里面装着变量的值。
在Python中，变量更像一个指针指向装变量值的盒子。

每次将另外的数字赋给变量的时候，实际上是创建了一个新的对象并把它赋给
变量（不仅仅是数字，对于所有的不可变类型，都是如此）。

下面是Python语言中有关复数的几个概念。
虚数不能单独存在，它们总是和一个值为0.0的实数部分一起来构成一个复数。
复数由实数部分和虚数部分构成。
表示虚数的语法：real+imagj。+

实数部分和虚数部分都是浮点型。
虚数部分必须有后缀j或J。

复数对象拥有数据属性，分别为该复数的实部和虚部。复数还拥有conjugate方法，调用它可以返回
该复数的共轭复数对象（两头牛背上的架子称为轭，轭使两头牛同步行走。共轭即为按一定的规律相配的一对

如果有一个操作数是复数，另一个操作数被转换为复数；
否则，如果有一个操作数是浮点型，另一个操作数被转换为浮点型；
否则，如果有一个操作数是长整型，则另一个操作数被转换为长整型；
否则，两者必然都是普通整型，无须类型转换。


函数coerce()仅返回一个包含类型转换完毕的两个数值元素的元组


内建函数mund()用于对浮点型进行四舍五入运算。它有一个可选的小数位数参数。如果不提供小数位参数，
它返回与第一个参数最接近的整型（但仍然是浮点类型）。第二个参数告诉round函数将结果精确到小数点后指定位数。

函数int()直接截去小数部分（返回值为整型）。
函数floor()得到最接近原数但小于原数的整型（返回值为浮点型）。
函数round()得到最接近原数的整型（返回值为浮点型）。